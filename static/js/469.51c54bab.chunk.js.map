{"version":3,"file":"static/js/469.51c54bab.chunk.js","mappings":"uQAUMA,EAAkBC,EAAAA,KAAaC,MAAM,CACzCC,MAAOF,EAAAA,KACGG,OACTC,SAAS,qBACTC,QAND,yJAMqB,CACnBC,QAAS,mBAEXC,SAAUP,EAAAA,KACAG,OACTC,SAAS,wBACTI,IAAI,KAGMC,EAAY,WAAO,IAAD,IACrBC,GAAWC,EAAAA,EAAAA,MAEjB,GAMMC,EAAAA,EAAAA,IAAQ,CACVC,cAAe,CACbX,MAAO,GACPK,SAAU,IAEZO,UAAUC,EAAAA,EAAAA,GAAYhB,GACtBiB,KAAM,cAXNC,EADJ,EACIA,SACAC,EAFJ,EAEIA,aACaC,EAHjB,EAGIC,UAAaD,OACbE,EAJJ,EAIIA,MACAD,EALJ,EAKIA,WAUFE,EAAAA,EAAAA,YAAU,WACJF,EAAUG,oBACZF,GAEH,GAAE,CAACD,EAAUG,mBAAoBF,IAMpC,OACI,kBAAMG,SAAUN,GALA,SAAAO,GAChBf,GAASgB,EAAAA,EAAAA,IAAMD,GAChB,IAGC,WAGI,6BAAO,SACN,0BAAQE,KAAK,QAChBC,YAAY,mBACZC,aAAa,OACTZ,EAAS,WAEdE,EAAOjB,QAAS,mCAAMiB,EAAOjB,aAAb,aAAM,EAAcI,cAGjC,6BAAO,aACH,0BAAQqB,KAAK,WACnBC,YAAY,sBACZC,aAAa,OACTZ,EAAS,cAEdE,EAAOZ,WAAY,mCAAMY,EAAOZ,gBAAb,aAAM,EAAiBD,cAEvC,mBAAQqB,KAAK,SAAb,SAAsB,aAGjC,E,UC9DD,MAVA,WACE,OACE,4BACE,wBAAI,YACJ,SAAClB,EAAD,KACA,uBAAG,eACH,SAAC,KAAD,CAAMqB,GAAG,YAAT,SAAqB,0BAG1B,C","sources":["components/LogInForm/LogInForm.jsx","pages/Login/Login.jsx"],"sourcesContent":["import { useForm } from 'react-hook-form';\nimport { useEffect } from 'react';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch } from \"react-redux\";\nimport { logIn } from \"redux/auth/authOperations\";\nimport * as yup from 'yup';\n\nconst emailRegex =\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nconst loginFormSchema = yup.object().shape({\n  email: yup\n  .string().trim()\n  .required('Email is required')\n  .matches(emailRegex, {\n    message: 'Invalid email.',\n  }),\n  password: yup\n  .string().trim()\n  .required('Password is required')\n  .min(6),\n});\n\nexport const LogInForm = () => {\n    const dispatch = useDispatch();\n    \n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n        reset,\n        formState,\n      } = useForm({\n        defaultValues: {\n          email: '',\n          password: '',\n        },\n        resolver: yupResolver(loginFormSchema),\n        mode: 'onTouched',\n      });\n    \n      useEffect(() => {\n        if (formState.isSubmitSuccessful) {\n          reset();\n        }\n      }, [formState.isSubmitSuccessful, reset]);\n    \n      const loginUser = data => {\n        dispatch(logIn(data));\n      };\n\n    return(\n        <form onSubmit={handleSubmit(loginUser)} \n        // autoComplete=\"off\"\n        >\n            <label>Email\n             <input  type=\"email\"\n          placeholder=\"Enter your email\"\n          autoComplete=\"off\"\n          {...register('email')}\n        />\n        {errors.email && <div>{errors.email?.message}</div>}\n            </label>\n            \n            <label> Password\n                <input  type=\"password\"\n          placeholder=\"Enter your password\"\n          autoComplete=\"off\"\n          {...register('password')}\n        />\n        {errors.password && <div>{errors.password?.message}</div>}\n            </label>\n            <button type='submit'>Log In</button>\n        </form>\n    )\n}","import { LogInForm } from 'components/LogInForm/LogInForm';\nimport { Link } from 'react-router-dom';\n\nfunction Login() {\n  return (\n    <div>\n      <h1>Log in</h1>\n      <LogInForm />\n      <p>New user?</p>\n      <Link to=\"/register\">Create your account</Link>\n    </div>\n  );\n}\nexport default Login;"],"names":["loginFormSchema","yup","shape","email","trim","required","matches","message","password","min","LogInForm","dispatch","useDispatch","useForm","defaultValues","resolver","yupResolver","mode","register","handleSubmit","errors","formState","reset","useEffect","isSubmitSuccessful","onSubmit","data","logIn","type","placeholder","autoComplete","to"],"sourceRoot":""}