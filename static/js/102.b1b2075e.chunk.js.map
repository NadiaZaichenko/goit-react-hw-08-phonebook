{"version":3,"file":"static/js/102.b1b2075e.chunk.js","mappings":"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","sources":["components/LogInForm/LoginForm.styled.jsx","components/LogInForm/LogInForm.jsx","pages/Login/Login.styled.jsx","pages/Login/Login.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { css } from '@emotion/react';\n\nconst styledFormDynamicStyle = ({ theme }) => css`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 30px;\n  margin-top: 20px;\n  padding: 30px;\n  border-radius: ${theme.borderRadius};\n  background-color: ${theme.colors.secondaryBackgroundColor};\n  box-shadow: ${theme.boxShadow};\n`;\n\nconst styledLabelDynamicStyle = ({ theme }) => css`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n  color: ${theme.colors.mainColor};\n  div {\n    padding: 12px;\n    border: 2px solid ${theme.colors.mainColor};\n    border-radius: ${theme.borderRadius};\n    background-color: ${theme.colors.accentColor};\n    color: ${theme.colors.secondaryBackgroundColor};\n    width: 100%;\n    font-size: 16px;\n    &::first-letter {\n      text-transform: uppercase;\n    }\n  }\n`;\n\nconst styledInputDynamicStyle = ({ theme }) => css`\n  width: 300px;\n  padding: 12px 12px 12px 15px;\n  font-size: 16px;\n  border: 2px solid ${theme.colors.mainColor};\n  border-radius: ${theme.borderRadius};\n  background-color: ${theme.colors.mainBackgroundColor};\n  &::placeholder {\n    font-size: 16px;\n    color: ${theme.colors.mainColor};\n  }\n`;\n\nconst styledButtonDynamicStyle = ({ theme }) => css`\n  width: 100%;\n  padding: 12px;\n  transform: scale(1);\n  color: ${theme.colors.mainColor};\n  border: 2px solid ${theme.colors.mainColor};\n  border-radius: ${theme.borderRadius};\n  font-size: ${theme.fontStyles.size};\n  font-weight: ${theme.fontStyles.weight};\n  background-color: ${theme.colors.mainBackgroundColor};\n  transition: transform 250ms ease-out, color 250ms ease-out,\n    border 250ms ease-out;\n  &:hover,\n  &:focus-visible {\n    color: ${theme.colors.accentColor};\n    border: 2px solid ${theme.colors.accentColor};\n    transform: scale(1.1);\n  }\n`;\n\nexport const StyledForm = styled.form`\n  ${styledFormDynamicStyle}\n`;\n\nexport const StyledLabel = styled.label`\n  ${styledLabelDynamicStyle}\n`;\n\nexport const StyledInput = styled.input`\n  ${styledInputDynamicStyle}\n`;\n\nexport const StyledButton = styled.button`\n  ${styledButtonDynamicStyle}\n`;","import { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch } from \"react-redux\";\nimport { logIn } from \"redux/auth/authOperations\";\nimport * as yup from 'yup';\nimport { toast } from \"react-toastify\";\nimport {\n  StyledLabel,\n  StyledForm,\n  StyledInput,\n  StyledButton,\n} from './LoginForm.styled';\n\nconst emailRegex =\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nconst loginFormSchema = yup.object().shape({\n  email: yup\n  .string().trim()\n  .required('Email is required')\n  .matches(emailRegex, {\n    message: 'Invalid email.',\n  }),\n  password: yup\n  .string().trim()\n  .required('Password is required')\n  .min(6),\n});\n\nexport const LogInForm = () => {\n    const dispatch = useDispatch();\n    \n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n        reset,\n      } = useForm({\n        defaultValues: {\n          email: '',\n          password: '',\n        },\n        resolver: yupResolver(loginFormSchema),\n        mode: 'onTouched',\n      });\n    \n      const loginUser = async data => {\n        // if(data !== Response){\n        //   toast.error('Sorry, this name is not valid.Try again');\n        // }\n        try{\n          await dispatch(logIn(data));\n          reset(); \n        } catch(error){\n           toast.error('Sorry, this name is not valid'); \n        }     \n      };\n\n    //   const registerUser = async data => {\n    //     try{\n    //       dispatch(registration(data));\n    //       reset();\n    //     } catch(error){\n    //        toast.error('Sorry, this name is not valid'); \n    //     }     \n    // }\n\n    return(\n        <StyledForm onSubmit={handleSubmit(loginUser)} \n        autoComplete=\"off\"\n        >\n            <StyledLabel>Email\n             <StyledInput  type=\"email\"\n          placeholder=\"Enter your email\"\n          autoComplete=\"off\"\n          {...register('email')}\n        />\n        {errors.email && <div>{errors.email?.message}</div>}\n            </StyledLabel>\n            \n            <StyledLabel> Password\n                <StyledInput  type=\"password\"\n          placeholder=\"Enter your password\"\n          autoComplete=\"off\"\n          {...register('password')}\n        />\n        {errors.password && <div>{errors.password?.message}</div>}\n            </StyledLabel>\n            <StyledButton type='submit'>Log In</StyledButton>\n        </StyledForm>\n    )\n}","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { css } from '@emotion/react';\n\nexport const FormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst formTitleDynamicStyle = ({ theme }) => css`\n  margin: 20px 0 0 0;\n  color: ${theme.colors.mainColor};\n`;\n\nconst newUserTextDynamicStyle = ({ theme }) => css`\n  margin-top: 20px;\n  color: ${theme.colors.mainColor};\n  font-size: ${theme.fontStyles.size};\n`;\n\nconst registerLinkDynamicStyle = ({ theme }) => css`\n  display: block;\n  width: 280px;\n  padding: 12px;\n  transform: scale(1);\n  color: ${theme.colors.mainColor};\n  font-size: ${theme.fontStyles.size};\n  font-weight: ${theme.fontStyles.weight};\n  text-align: center;\n  border: 2px solid ${theme.colors.mainColor};\n  border-radius: ${theme.borderRadius};\n  transition: transform 250ms ease-out, color 250ms ease-out,\n    border 250ms ease-out;\n  &:hover,\n  &:focus-visible {\n    color: ${theme.colors.accentColor};\n    border: 2px solid ${theme.colors.accentColor};\n    transform: scale(1.1);\n  }\n`;\n\nexport const FormTitle = styled.h1`\n  ${formTitleDynamicStyle}\n`;\n\nexport const NewUserText = styled.p`\n  ${newUserTextDynamicStyle}\n`;\n\nexport const RegisterLink = styled(Link)`\n  ${registerLinkDynamicStyle}\n`;","import { LogInForm } from 'components/LogInForm/LogInForm';\nimport { FormWrapper, NewUserText, RegisterLink, FormTitle } from './Login.styled';\n\nfunction Login() {\n  return (\n    <FormWrapper>\n      <FormTitle>Log in</FormTitle>\n      <LogInForm />\n      <NewUserText>New user?</NewUserText>\n      <RegisterLink to=\"/register\">Create your account</RegisterLink>\n    </FormWrapper>\n  );\n}\n\nexport default Login;"],"names":["StyledForm","styled","theme","css","borderRadius","colors","secondaryBackgroundColor","boxShadow","StyledLabel","mainColor","accentColor","StyledInput","mainBackgroundColor","StyledButton","fontStyles","size","weight","loginFormSchema","yup","shape","email","trim","required","matches","message","password","min","LogInForm","dispatch","useDispatch","useForm","defaultValues","resolver","yupResolver","mode","register","handleSubmit","errors","formState","reset","loginUser","data","logIn","toast","onSubmit","autoComplete","type","placeholder","FormWrapper","FormTitle","NewUserText","RegisterLink","Link","to"],"sourceRoot":""}