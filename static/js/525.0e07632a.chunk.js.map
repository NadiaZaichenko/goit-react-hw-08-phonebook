{"version":3,"file":"static/js/525.0e07632a.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.styled.jsx","pages/Register/Register.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { css } from '@emotion/react';\n\nconst styledFormDynamicStyle = ({ theme }) => css`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 30px;\n  margin-top: 20px;\n  padding: 30px;\n  border-radius: ${theme.borderRadius};\n  background-color: ${theme.colors.secondaryBackgroundColor};\n  box-shadow: ${theme.boxShadow};\n`;\n\nconst styledLabelDynamicStyle = ({ theme }) => css`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n  color: ${theme.colors.mainColor};\n  div {\n    padding: 12px;\n    border: 2px solid ${theme.colors.mainColor};\n    border-radius: ${theme.borderRadius};\n    background-color: ${theme.colors.accentBackgroundColor};\n    color: ${theme.colors.secondaryBackgroundColor};\n    width: 100%;\n    font-size: 16px;\n    &::first-letter {\n      text-transform: uppercase;\n    }\n  }\n`;\n\nconst styledInputDynamicStyle = ({ theme }) => css`\n  width: 300px;\n  padding: 12px 12px 12px 15px;\n  font-size: 16px;\n  border: 2px solid ${theme.colors.mainColor};\n  border-radius: ${theme.borderRadius};\n  background-color: ${theme.colors.mainBackgroundColor};\n  &::placeholder {\n    font-size: 16px;\n    color: ${theme.colors.mainColor};\n  }\n`;\n\nconst styledButtonDynamicStyle = ({ theme }) => css`\n  width: 100%;\n  padding: 12px;\n  transform: scale(1);\n  color: ${theme.colors.mainColor};\n  border: 2px solid ${theme.colors.mainColor};\n  border-radius: ${theme.borderRadius};\n  font-size: ${theme.fontStyles.size};\n  font-weight: ${theme.fontStyles.weight};\n  background-color: ${theme.colors.mainBackgroundColor};\n  transition: transform 250ms ease-out, color 250ms ease-out,\n    border 250ms ease-out;\n  &:hover,\n  &:focus-visible {\n    ${theme.colors.accentColor};\n    border: 2px solid ${theme.colors.accentColor};\n    transform: scale(1.1);\n  }\n`;\n\nexport const StyledForm = styled.form`\n  ${styledFormDynamicStyle}\n`;\n\nexport const StyledLabel = styled.label`\n  ${styledLabelDynamicStyle}\n`;\n\nexport const StyledInput = styled.input`\n  ${styledInputDynamicStyle}\n`;\n\nexport const StyledButton = styled.button`\n  ${styledButtonDynamicStyle}\n`;","import { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch } from 'react-redux';\nimport {registration } from \"redux/auth/authOperations\";\nimport * as yup from 'yup';\nimport { toast } from \"react-toastify\";\nimport {\n  StyledLabel,\n  StyledForm,\n  StyledInput,\n  StyledButton,\n} from './RegisterForm.styled';\n\nconst emailRegex =\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nexport const registrationFormSchema = yup.object().shape({\n  name: yup.string().trim().required('Name is required'),\n  email: yup.string().trim().required('Email is required').matches(emailRegex, {\n    message: 'Invalid email.',\n  }),\n  password: yup\n    .string()\n    .trim()\n    .required('Password is required')\n    .min(8),\n});\n\nexport const RegisterForm = () => {\n    const dispatch = useDispatch();\n\n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n        reset,\n      } = useForm({\n        defaultValues: {\n          name: '',\n          email: '',\n          password: '',\n        },\n        resolver: yupResolver(registrationFormSchema),\n        mode: 'onTouched',\n      });\n    \n      const registerUser = async data => {\n        try{\n          dispatch(registration(data));\n          reset();\n        } catch(error){\n           toast.error('Sorry, this name is not valid'); \n        }     \n    }\n    \n\n    return(\n        <StyledForm onSubmit={handleSubmit(registerUser)} >\n          <StyledLabel>Name\n                <StyledInput type=\"text\"\n          placeholder=\"Enter your name\"\n          autoComplete=\"off\"\n          {...register('name')}\n        />\n        {errors.name && <div>{errors.name?.message}</div>}\n            </StyledLabel>\n            <StyledLabel>Email\n                <StyledInput type=\"email\"\n          placeholder=\"Enter your email\"\n          autoComplete=\"off\"\n          {...register('email')}\n        />\n        {errors.email && <div>{errors.email?.message}</div>}\n            </StyledLabel>\n            <StyledLabel>Password\n                <StyledInput  type=\"password\"\n          placeholder=\"Enter your password\"\n          autoComplete=\"off\"\n          {...register('password')}\n        />\n        {errors.password && <div>{errors.password?.message}</div>}\n            </StyledLabel>\n            <StyledButton type=\"submit\">Register</StyledButton>\n        </StyledForm>\n       \n    )\n}","import styled from '@emotion/styled';\nimport { css } from '@emotion/react';\nimport { Link } from 'react-router-dom';\n\nexport const FormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst formTitleDynamicStyle = ({ theme }) => css`\n  margin: 20px 0 0 0;\n  color: ${theme.colors.mainColor};\n`;\n\nconst userTextDynamicStyle = ({ theme }) => css`\n  margin-top: 20px;\n  color: ${theme.colors.mainColor};\n  font-size: ${theme.fontStyles.size};\n`;\n\nconst loginLinkDynamicStyle = ({ theme }) => css`\n  display: block;\n  width: 280px;\n  padding: 12px;\n  transform: scale(1);\n  color: ${theme.colors.mainColor};\n  font-size: ${theme.fontStyles.size};\n  font-weight: ${theme.fontStyles.weight};\n  text-align: center;\n  color: ${theme.colors.mainColor};\n  border: 2px solid ${theme.colors.mainColor};\n  border-radius: 8px;\n  transition: transform 250ms ease-out, color 250ms ease-out,\n    border 250ms ease-out;\n  &:hover,\n  &:focus-visible {\n    color: ${theme.colors.accentColor};\n    border: 2px solid ${theme.colors.accentColor};\n    transform: scale(1.1);\n  }\n`;\n\nexport const FormTitle = styled.h1`\n  ${formTitleDynamicStyle}\n`;\n\nexport const UserText = styled.p`\n  ${userTextDynamicStyle}\n`;\n\nexport const LoginLink = styled(Link)`\n  ${loginLinkDynamicStyle}\n`;","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport {\n  FormWrapper,\n  UserText,\n  LoginLink,\n  FormTitle,\n} from './Register.styled';\n\nfunction Register() {\n  return (\n    <FormWrapper>\n    <FormTitle>Create account</FormTitle>\n    <RegisterForm />\n    <UserText>Already have an account?</UserText>\n    <LoginLink to=\"/login\">Log in</LoginLink>\n  </FormWrapper>\n\n  );\n}\n\nexport default Register;"],"names":["StyledForm","styled","theme","css","borderRadius","colors","secondaryBackgroundColor","boxShadow","StyledLabel","mainColor","accentBackgroundColor","StyledInput","mainBackgroundColor","StyledButton","fontStyles","size","weight","accentColor","registrationFormSchema","yup","shape","name","trim","required","email","matches","message","password","min","RegisterForm","dispatch","useDispatch","useForm","defaultValues","resolver","yupResolver","mode","register","handleSubmit","errors","formState","reset","registerUser","data","registration","error","toast","onSubmit","type","placeholder","autoComplete","FormWrapper","FormTitle","UserText","LoginLink","Link","to"],"sourceRoot":""}