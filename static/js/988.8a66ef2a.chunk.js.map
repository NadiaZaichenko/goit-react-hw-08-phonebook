{"version":3,"file":"static/js/988.8a66ef2a.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactItem/ContactItem.styled.jsx","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Message/Message.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { css } from '@emotion/react';\n\nexport const StyledForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 45px;\n  width: 60%;\n`;\n\nconst labelDynamicStyle = ({theme}) => css`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n  color: ${theme.colors.mainColor};\n  div {\n    padding: 12px;\n    border: 2px solid ${theme.colors.mainColor};\n    border-radius: ${theme.borderRadius};\n    background-color: ${theme.colors.accentColor};\n    color: ${theme.colors.secondaryBackgroundColor};\n    width: 100%;\n    font-size: 16px;\n    &::first-letter {\n      text-transform: uppercase;\n    }\n  }\n`\n\nconst inputDynamicStyle = ({theme}) => css`\n   width: 300px;\n  padding: 12px 12px 12px 15px;\n  font-size: 16px;\n  border-radius: ${theme.borderRadius};\n  border: 2px solid ${theme.colors.mainColor};\n  background-color: ${theme.colors.mainBackgroundColor};\n  color: ${theme.colors.mainColor};\n  &::placeholder {\n    color: ${theme.colors.mainColor};\n    font-size: 20px;\n  }\n`\n\nconst buttonDynamicStyle = ({ theme }) =>\n  css`\n    width: 100%;\n    padding: 12px;\n    color: ${theme.colors.mainColor};\n    border-radius: ${theme.borderRadius};\n    border: 2px solid ${theme.colors.mainColor};\n    font-size: ${theme.fontStyles.size};\n    font-weight: ${theme.fontStyles.weight};\n    background-color: ${theme.colors.mainBackgroundColor};\n    transition: transform 250ms ease-out, background-color 250ms ease-out;\n    &:hover,\n    &:focus-visible {\n      color: ${theme.colors.accentColor};\n      border: '2px solid ${theme.colors.accentColor}';\n      transform: 'scale(1.1)';\n    }\n  `;\nexport const StyledLabel = styled.label`\n  ${labelDynamicStyle}\n`\nexport const StyledInput = styled.input`\n  ${inputDynamicStyle}\n`\n\n  export const StyledButton = styled.button `\n    ${buttonDynamicStyle}\n  `","import {\n  useAddContactMutation,\n  useFetchContactsQuery,\n} from 'services/contactsApi';\nimport {toast} from 'react-toastify';\nimport {useForm} from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport {\n    StyledLabel,\n    StyledForm,\n    StyledInput,\n    StyledButton,\n  } from './ContactForm.styled';\n\nconst nameRegex = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\n\nconst numberRegex = /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\nconst schema = yup.object().shape({\n    name: yup\n    .string()\n    .max(30)\n    .matches(nameRegex, {\n        message: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n    })\n    .required('Name is required'),\n    number: yup\n    .string()\n    .min(3)\n    .matches(numberRegex, {\n        message: \"number number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n    })\n    .required('Number is reqired')\n})\n\nexport const ContactForm = () => {\n  const { data: contacts } = useFetchContactsQuery();\n  const [addContact] = useAddContactMutation();\n\n  const {\n      register, \n      handleSubmit,\n      formState: { errors},\n      reset,\n    } = useForm({\n      defaultValues: {\n        name: '',\n        number: '',\n      },\n      resolver: yupResolver(schema),\n      mode: 'onTouched',\n    })\n  \n\n   const addNewContact = async data => {\n    const normalizeName = data.name.toLowerCase();\n    const normalizednumber = data.number;\n\n    if(contacts.find(item => item.name.toLowerCase() === normalizeName)) {\n      return toast.info(`${data.name} has alredy in your contacts`);\n    };\n    if(contacts.find(item => item.number === normalizednumber)) {\n      return toast.info(`${data.number} has alredy in your contacts`);\n    };\n    try{\n      await addContact(data);\n      toast.info('New contact has been added to your numberbook')\n      reset();\n    }catch(error) {\n      toast.error('Something is wrong. New contact was not added')\n    }\n   };\n\n    return (\n       <StyledForm onSubmit={handleSubmit(addNewContact)}>\n        <StyledLabel>\n          Name\n          <StyledInput\n            type=\"text\"\n            placeholder=\"Enter a contact name\"\n            autoComplete=\"off\"\n            {...register('name')}\n          />\n          {errors.name && <div>{errors.name?.message}</div>}\n        </StyledLabel>\n        <StyledLabel>\n          Number\n          <StyledInput\n            type=\"tel\"\n            placeholder=\"Enter a contact number\"\n            autoComplete=\"off\"\n            {...register('number')}\n          />\n          {errors.number && <div>{errors.number?.message}</div>}\n        </StyledLabel>\n        <StyledButton type=\"submit\">Add contact</StyledButton>\n      </StyledForm>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  margin: 0;\n  padding: 0;\n  list-style: none;\n  height: 60%;\n  overflow: auto;\n`;","import styled from '@emotion/styled';\nimport { css } from '@emotion/react';\n\nconst listItemDynamicStyle = ({theme}) => css`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 20px;\n  padding: 12px;\n  font-size: 16px;\n  border-radius: ${theme.borderRadius};\n  background-color: ${theme.colors.mainBackgroundColor};\n  color: ${theme.colors.mainColor};\n`\n\nexport const ContactInfo = styled.p`\n  margin: 0;\n`;\n\nconst styledButtonDynamicStyle = ({theme}) => css`\n   width: 70px;\n  height: 40px;\n  transform: scale(1);\n  background-color: ${theme.colors.mainColor};\n  border-radius: ${theme.borderRadius};\n  border: 2px solid ${theme.colors.mainColor};\n  color: ${theme.colors.mainBackgroundColor};\n  font-size: ${theme.fontStyles.size};\n  transition: transform 250ms ease-out, background-color 250ms ease-out;\n  &:hover,\n  &:focus-visible {\n    transform: scale(1.1);\n  }\n`\n\nexport const ListItem = styled.li`\n${listItemDynamicStyle}\n`\n\nexport const StyledButton = styled.button`\n${styledButtonDynamicStyle}\n`","import PropTypes from 'prop-types'\nimport { toast } from 'react-toastify';\nimport { useDeleteContactMutation } from 'services/contactsApi';\nimport { ListItem, StyledButton, ContactInfo } from './ContactItem.styled';\n\nexport const ContactItem = ({id, name, number}) => {\n    const [deleteContact] = useDeleteContactMutation();\n\n    const contactDeleteOf = async (contactId, contactName) => {\n     try {\n        await deleteContact(contactId);\n        toast.info(`${contactName} has been deleted `);\n     } catch (error) {\n        toast.error(`Something was wrong, ${contactName} was not deleted`)\n     }\n\n    }\nreturn (\n    <ListItem>\n        <ContactInfo>{name} : {number}</ContactInfo>\n        <StyledButton type=\"button\" \n        onClick={() => contactDeleteOf(id, name)}>\n            Delete\n        </StyledButton>\n    </ListItem>\n);\n}\n\nContactItem.propTypes ={\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n\n}","import { useMemo } from 'react';\nimport { useFilterValue } from 'hooks';\nimport { useFetchContactsQuery } from 'services/contactsApi';\nimport { List } from './ContactList.styled'\nimport { ContactItem } from 'components/ContactItem/ContactItem'\n\nexport function ContactList() {\n \n  const filterValue = useFilterValue();\n\nconst {data: contacts} = useFetchContactsQuery();\n\nconst getFilteredContacts = useMemo(\n  () => () => {\n    if (!contacts) {\n      return;\n    }\n\n    const normalizedFilter = filterValue.toLowerCase().trim();\n\n    return contacts.filter(\n      contact =>\n        contact.name.toLowerCase().includes(normalizedFilter) ||\n        contact.number.includes(normalizedFilter)\n    );\n  },\n  [contacts, filterValue]\n);\nconst filteredContacts = getFilteredContacts();\n  return (\n    <List>\n      {filteredContacts \n      && \n      filteredContacts.map(({ id, name, number }) => {\n        return <ContactItem key={id} id={id} name={name} number={number} />;\n      })}\n    </List>\n  );\n}","import styled from '@emotion/styled';\nimport { css } from '@emotion/react';\n\nconst styledLabelDynamicStyle = ({ theme }) => css`\n  display: flex;\n  flex-direction: column;\n  gap: 18px;\n  color: ${theme.colors.mainColor};\n`;\n\nconst styledInputDynamicStyle = ({ theme }) => css`\n  width: 300px;\n  padding: 12px 12px 12px 15px;\n  font-size: 16px;\n  border: 2px solid ${theme.colors.mainColor};\n  border-radius: ${theme.borderRadius};\n  background-color: ${theme.colors.mainBackgroundColor};\n  color: ${theme.colors.mainColor};\n`;\n\nexport const StyledLabel = styled.label`\n  ${styledLabelDynamicStyle}\n`;\n\nexport const StyledInput = styled.input`\n  ${styledInputDynamicStyle}\n`;","import { useDispatch } from 'react-redux';\nimport { setFilter} from 'redux/filter/filtersSlice';\nimport { useFilterValue } from 'hooks';\nimport { StyledLabel, StyledInput } from './Filter.styled';\n\nexport const Filter = () => {\nconst dispatch = useDispatch();\nconst filter = useFilterValue();\n\nreturn (\n    <StyledLabel> Find contacts by name\n        <StyledInput \n        name=\"filter\"\n        type=\"text\"\n        onChange={e => dispatch(setFilter(e.currentTarget.value))}\n        value ={filter}/>\n    </StyledLabel>\n)\n}\n","import PropTypes from 'prop-types'\n\nexport const Message = ({message}) => {\nreturn (\n    <><p>\n        {message}\n    </p>\n    </>\n)\n}\n\nMessage.propTypes = {\n    message: PropTypes.string.isRequired\n}\n\n","import styled from '@emotion/styled';\nimport { css } from '@emotion/react';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const SectionsContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 50px;\n  justify-content: space-between;\n  flex-grow: 1;\n`;\n\nconst sectionDynamicStyle = ({ theme }) => css`\n  display: flex;\n  margin-top: 40px;\n  flex-direction: column;\n  align-items: center;\n  gap: 30px;\n  width: 510px;\n  min-height: 570px;\n  padding: 20px;\n  background-color: ${theme.colors.secondaryBackgroundColor};\n  border-radius: ${theme.borderRadius};\n  box-shadow: ${theme.boxShadow};\n`;\n\nexport const Title = styled.h1`\n  margin-top: 0;\n  margin-bottom: 40px;\n  text-align: center;\n  font-size: 32px;\n  text-transform: uppercase;\n`;\n\nconst sectionTitleDynamicStyle = ({ theme }) => css`\n  margin: 0;\n  text-align: center;\n  font-size: 28px;\n  color: ${theme.colors.mainColor};\n`;\n\nexport const Section = styled.section`\n  ${sectionDynamicStyle}\n`;\n\nexport const SectionTitle = styled.h2`\n  ${sectionTitleDynamicStyle}\n`;","import { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { useFetchContactsQuery } from \"services/contactsApi\";\nimport { Message } from \"components/Message/Message\";\nimport { ToastContainer } from \"react-toastify\";\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n    Container,\n    SectionsContainer,\n    Section,\n    SectionTitle,\n  } from './Contacts.styled';\n\n\n const Contacts = () => {\n    const {\n      data: contacts,\n    } = useFetchContactsQuery();\n\n    const totalContacts = () => {\n        if(!contacts) {\n            return 0;\n        }\n        return contacts.length;\n\n    }\n\n    return (\n        <Container>\n      <SectionsContainer>\n        <Section>\n          <SectionTitle>Add contact</SectionTitle>\n          <ContactForm />\n        </Section>\n        <Section>\n          <SectionTitle>Contacts</SectionTitle>\n          {totalContacts !== 0 ? (\n            <>\n              <Filter />\n              <ContactList />\n            </>\n          ) : (\n            <Message message=\"There are no contacts in your Phonebook. Please add your first contact!\" />\n          )}\n        </Section>\n      </SectionsContainer>\n      <ToastContainer\n      autoClose={3000}/>\n    </Container>\n    );\n}\n\nexport default Contacts;"],"names":["StyledForm","styled","StyledLabel","theme","css","colors","mainColor","borderRadius","accentColor","secondaryBackgroundColor","StyledInput","mainBackgroundColor","StyledButton","fontStyles","size","weight","schema","yup","shape","name","max","matches","message","required","number","min","ContactForm","contacts","useFetchContactsQuery","data","useAddContactMutation","addContact","useForm","defaultValues","resolver","yupResolver","mode","register","handleSubmit","errors","formState","reset","addNewContact","normalizeName","toLowerCase","normalizednumber","find","item","toast","onSubmit","type","placeholder","autoComplete","List","ContactInfo","ListItem","ContactItem","id","useDeleteContactMutation","deleteContact","contactDeleteOf","contactId","contactName","onClick","ContactList","filterValue","useFilterValue","filteredContacts","useMemo","normalizedFilter","trim","filter","contact","includes","getFilteredContacts","map","Filter","dispatch","useDispatch","onChange","e","setFilter","currentTarget","value","Message","Container","SectionsContainer","Section","boxShadow","SectionTitle","length","autoClose"],"sourceRoot":""}