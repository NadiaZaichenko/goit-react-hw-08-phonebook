{"version":3,"file":"static/js/97.4a20d06c.chunk.js","mappings":"oRAUMA,EAAkBC,EAAAA,KAAaC,MAAM,CACzCC,MAAOF,EAAAA,KACGG,OACTC,SAAS,qBACTC,QAND,yJAMqB,CACnBC,QAAS,mBAEXC,SAAUP,EAAAA,KACAG,OACTC,SAAS,wBACTI,IAAI,KAGMC,EAAY,WAAO,IAAD,IACrBC,GAAWC,EAAAA,EAAAA,MAEjB,GAKMC,EAAAA,EAAAA,IAAQ,CACVC,cAAe,CACbX,MAAO,GACPK,SAAU,IAEZO,UAAUC,EAAAA,EAAAA,GAAYhB,GACtBiB,KAAM,cAVNC,EADJ,EACIA,SACAC,EAFJ,EAEIA,aACaC,EAHjB,EAGIC,UAAaD,OACbE,EAJJ,EAIIA,MAkBJ,OACI,kBAAMC,SAAUJ,GATA,SAAAK,GACbA,IAASC,SAASC,IAClBC,EAAAA,GAAAA,MAAY,2CAEfhB,GAASiB,EAAAA,EAAAA,IAAMJ,IACbF,GACH,IAICO,aAAa,MADb,WAGI,6BAAO,SACN,0BAAQC,KAAK,QAChBC,YAAY,mBACZF,aAAa,OACTX,EAAS,WAEdE,EAAOjB,QAAS,mCAAMiB,EAAOjB,aAAb,aAAM,EAAcI,cAGjC,6BAAO,aACH,0BAAQuB,KAAK,WACnBC,YAAY,sBACZF,aAAa,OACTX,EAAS,cAEdE,EAAOZ,WAAY,mCAAMY,EAAOZ,gBAAb,aAAM,EAAiBD,cAEvC,mBAAQuB,KAAK,SAAb,SAAsB,aAGjC,E,uCCpEYE,EAAcC,EAAAA,EAAAA,IAAH,yHAuCXC,EAAYD,EAAAA,EAAAA,GAAH,+BAhCQ,SAAC,GAAD,IAAGE,EAAH,EAAGA,MAAH,OAAeC,EAAAA,EAAAA,IAAd,IAAD,yDAEnBD,EAAME,OAAOC,UAFM,IAoCjBC,EAAcN,EAAAA,EAAAA,EAAH,+BA/BQ,SAAC,GAAD,IAAGE,EAAH,EAAGA,MAAH,OAAeC,EAAAA,EAAAA,IAAd,IAAD,0EAErBD,EAAME,OAAOC,UACTH,EAAMK,WAAWC,KAHA,IAmCnBC,GAAeT,EAAAA,EAAAA,GAAOU,EAAAA,GAAPV,CAAH,+BA7BQ,SAAC,GAAD,IAAGE,EAAH,EAAGA,MAAH,OAAeC,EAAAA,EAAAA,IAAd,IAAD,0aAKtBD,EAAME,OAAOC,UACTH,EAAMK,WAAWC,KACfN,EAAMK,WAAWI,OAEZT,EAAME,OAAOC,UAChBH,EAAMU,aAKZV,EAAME,OAAOS,YACFX,EAAME,OAAOS,YAhBJ,ICRjC,MAXA,WACE,OACE,UAACd,EAAD,YACE,SAACE,EAAD,UAAW,YACX,SAACxB,EAAD,KACA,SAAC6B,EAAD,UAAa,eACb,SAACG,EAAD,CAAcK,GAAG,YAAjB,SAA6B,0BAGlC,C","sources":["components/LogInForm/LogInForm.jsx","pages/Login/Login.styled.jsx","pages/Login/Login.jsx"],"sourcesContent":["import { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch } from \"react-redux\";\nimport { logIn } from \"redux/auth/authOperations\";\nimport * as yup from 'yup';\nimport { toast } from \"react-toastify\";\n\nconst emailRegex =\n  /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nconst loginFormSchema = yup.object().shape({\n  email: yup\n  .string().trim()\n  .required('Email is required')\n  .matches(emailRegex, {\n    message: 'Invalid email.',\n  }),\n  password: yup\n  .string().trim()\n  .required('Password is required')\n  .min(6),\n});\n\nexport const LogInForm = () => {\n    const dispatch = useDispatch();\n    \n    const {\n        register,\n        handleSubmit,\n        formState: { errors },\n        reset,\n      } = useForm({\n        defaultValues: {\n          email: '',\n          password: '',\n        },\n        resolver: yupResolver(loginFormSchema),\n        mode: 'onTouched',\n      });\n    \n      const loginUser = data => {\n        if(data !== Response.ok){\n           toast.error('Sorry, this name is not valid.Try again'); \n        }\n        dispatch(logIn(data));\n          reset();\n      };\n\n    return(\n        <form onSubmit={handleSubmit(loginUser)} \n        autoComplete=\"off\"\n        >\n            <label>Email\n             <input  type=\"email\"\n          placeholder=\"Enter your email\"\n          autoComplete=\"off\"\n          {...register('email')}\n        />\n        {errors.email && <div>{errors.email?.message}</div>}\n            </label>\n            \n            <label> Password\n                <input  type=\"password\"\n          placeholder=\"Enter your password\"\n          autoComplete=\"off\"\n          {...register('password')}\n        />\n        {errors.password && <div>{errors.password?.message}</div>}\n            </label>\n            <button type='submit'>Log In</button>\n        </form>\n    )\n}","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\nimport { css } from '@emotion/react';\n\nexport const FormWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst formTitleDynamicStyle = ({ theme }) => css`\n  margin: 20px 0 0 0;\n  color: ${theme.colors.mainColor};\n`;\n\nconst newUserTextDynamicStyle = ({ theme }) => css`\n  margin-top: 20px;\n  color: ${theme.colors.mainColor};\n  font-size: ${theme.fontStyles.size};\n`;\n\nconst registerLinkDynamicStyle = ({ theme }) => css`\n  display: block;\n  width: 280px;\n  padding: 12px;\n  transform: scale(1);\n  color: ${theme.colors.mainColor};\n  font-size: ${theme.fontStyles.size};\n  font-weight: ${theme.fontStyles.weight};\n  text-align: center;\n  border: 2px solid ${theme.colors.mainColor};\n  border-radius: ${theme.borderRadius};\n  transition: transform 250ms ease-out, color 250ms ease-out,\n    border 250ms ease-out;\n  &:hover,\n  &:focus-visible {\n    color: ${theme.colors.accentColor};\n    border: 2px solid ${theme.colors.accentColor};\n    transform: scale(1.1);\n  }\n`;\n\nexport const FormTitle = styled.h1`\n  ${formTitleDynamicStyle}\n`;\n\nexport const NewUserText = styled.p`\n  ${newUserTextDynamicStyle}\n`;\n\nexport const RegisterLink = styled(Link)`\n  ${registerLinkDynamicStyle}\n`;","import { LogInForm } from 'components/LogInForm/LogInForm';\nimport { FormWrapper, NewUserText, RegisterLink, FormTitle } from './Login.styled';\n\nfunction Login() {\n  return (\n    <FormWrapper>\n      <FormTitle>Log in</FormTitle>\n      <LogInForm />\n      <NewUserText>New user?</NewUserText>\n      <RegisterLink to=\"/register\">Create your account</RegisterLink>\n    </FormWrapper>\n  );\n}\n\nexport default Login;"],"names":["loginFormSchema","yup","shape","email","trim","required","matches","message","password","min","LogInForm","dispatch","useDispatch","useForm","defaultValues","resolver","yupResolver","mode","register","handleSubmit","errors","formState","reset","onSubmit","data","Response","ok","toast","logIn","autoComplete","type","placeholder","FormWrapper","styled","FormTitle","theme","css","colors","mainColor","NewUserText","fontStyles","size","RegisterLink","Link","weight","borderRadius","accentColor","to"],"sourceRoot":""}